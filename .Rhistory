z@data <- z_df
x_df <- x@data
z <- sp::merge(z, x_df, by = "row.names", all.x = FALSE) #and this?
rownames(z@data) <- z@data$Row.names
z@data$Row.names <- NULL
z@proj4string <- x@proj4string
rm(z_df, x_df)
return(z)
}
temp <- my.point.in.poly(OBIS_observations, Study_Area_hex)
OBIS_observations=temp
temp <- OBIS_observations@data
head(temp)
View(temp)
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
xy <- subset(OBIS, select = c(decimalLongitude, decimalLatitude))
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
x=OBIS_observations;y=Study_Area_hex
#Testing function
z <- x[!is.na(sp::over(x, sp::geometry(y))), ] #clips spatial points to study extent? = 866463 released points but some still have NAs
z_df <- data.frame(sp::over(x, y))
head(z_df)
z_df <- na.omit(z_df)
xy <- subset(OBIS, select = c(decimalLongitude, decimalLatitude))
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
#writeOGR(OBIS_observations, dsn = "./output", layer = "temp", driver = "ESRI Shapefile", verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
OBIS_observations <- my.point.in.poly(OBIS_observations, Study_Area_hex)
OBIS_observations <- OBIS_observations@data
##Loading custom functions
source("./sub_code/functions/my_point_in_poly.R")
xy <- subset(OBIS, select = c(decimalLongitude, decimalLatitude))
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
#writeOGR(OBIS_observations, dsn = "./output", layer = "temp", driver = "ESRI Shapefile", verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
OBIS_observations <- my.point.in.poly(OBIS_observations, Study_Area_hex)
OBIS_observations <- OBIS_observations@data
#
##
###
####
#####
#Clear workspace
rm(list=ls())
###Loading packages
library(tidyverse)
library(rgdal)
library(rgeos)
library(data.table)
##Loading custom functions
source("./sub_code/functions/my_point_in_poly.R")
#Change the amount of memory being used
memory.limit(size = 25000)
########################
########################
#1. Loading in OBIS files and clipping to study extent (Chris)
filenames <- list.files(path="LargeData/OBIS/", pattern= "OBISData_", full.names=TRUE, recursive=T)
# load all files into a list
#datalist <- lapply(filenames, read.csv)
OBIS <- NULL
for (i in 1:length(filenames)){temp <- read.csv(filenames[i])
OBIS <- rbind(OBIS,temp)}
rm(temp)
names(OBIS)
obisnames<- c('id', 'class', 'phylum', 'family', 'order', 'species', 'decimalLongitude', 'decimalLatitude', 'obisID', 'countryCode', 'catalogNumber')
OBIS <- OBIS[obisnames]
###Spatial subset based on being within study extent
Study_Area_hex <- readOGR("./output/shapefiles", "Study_Area_hex")
xy <- subset(OBIS, select = c(decimalLongitude, decimalLatitude))
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
OBIS_observations <- my.point.in.poly(OBIS_observations, Study_Area_hex)
OBIS <- OBIS_observations@data
rm(OBIS_observations, xy, i, filenames, obisnames)
###Loading packages
library(tidyverse)
library(rgdal)
library(rgeos)
library(data.table)
##Loading custom functions
setwd('C:/Users/coleb/Documents/GitHub/Sam_Github')
source("./sub_code/functions/my_point_in_poly.R")
#Change the amount of memory being used
memory.limit(size = 25000)
########################
########################
#1. Loading in OBIS files and clipping to study extent (Chris)
filenames <- list.files(path="LargeData/OBIS/", pattern= "OBISData_", full.names=TRUE, recursive=T)
# load all files into a list
#datalist <- lapply(filenames, read.csv)
OBIS <- NULL
for (i in 1:length(filenames)){temp <- read.csv(filenames[i])
OBIS <- rbind(OBIS,temp)}
rm(temp)
names(OBIS)
obisnames<- c('id', 'class', 'phylum', 'family', 'order', 'species', 'decimalLongitude', 'decimalLatitude', 'obisID', 'countryCode', 'catalogNumber')
OBIS <- OBIS[obisnames]
###Spatial subset based on being within study extent
Study_Area_hex <- readOGR("./output/shapefiles", "Study_Area_hex")
xy <- subset(OBIS, select = c(decimalLongitude, decimalLatitude))
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
#writeOGR(OBIS_observations, dsn = "./output", layer = "temp", driver = "ESRI Shapefile", verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
OBIS_observations <- my.point.in.poly(OBIS_observations, Study_Area_hex)
OBIS <- OBIS_observations@data
rm(OBIS_observations, xy, i, filenames, obisnames)
######
#Step: filter arachnids and insects
OBIS <- OBIS %>%
filter(class != "Insecta", class != 'Arachnida')
#Step: make a few dataframes
OBISarth <- OBIS %>%
filter(phylum == 'Arthropoda')
OBISchord <- OBIS %>%
filter(phylum == 'Chordata')
OBISallelse <- OBIS %>%
filter(phylum != 'Chordata', phylum != 'Arthropoda')
OBIS$phylum[1:40]
#Step: make plots
OBISarthclassplot <- OBISarth %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthclassplot <- OBISarthclassplot + theme(axis.text.x = element_text(angle = 90))
OBISarthorderplot <- OBISarth %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthclassplot <- OBISarthclassplot + theme(axis.text.x = element_text(angle = 90))
OBISchordclassplot <- OBISchord %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordclassplot <- OBISchordclassplot + theme(axis.text.x = element_text(angle = 90))
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90))
OBISallelseclassplot <- OBISallelse %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISallelseclassplot <- OBISallelseclassplot + theme(axis.text.x = element_text(angle = 90))
OBISallelseorderplot <- OBISallelse %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISallelseorderplot <- OBISallelseorderplot + theme(axis.text.x = element_text(angle = 90, size = 3))
OBISarthclassplot
OBISarthorderplot
OBISchordclassplot
OBISchordorderplot
OBISallelseclassplot
OBISallelseorderplot
ggsave(OBISarthclassplot,
file = './output/figures/OBISarthclassplot.png', dpi = 300)
ggsave(OBISarthorderplot,
file = './output/figures/OBISarthorderplot.png', dpi = 300)
ggsave(OBISchordclassplot,
file = './output/figures/OBISchordclassplot.png', dpi = 300)
ggsave(OBISchordorderplot,
file = './output/figures/OBISchordorderplot.png', dpi = 300)
ggsave(OBISallelseclassplot,
file = './output/figures/OBISallelseclassplot.png', dpi = 300)
ggsave(OBISallelsecorderplot,
file = './output/figures/OBISallelseorderplot.png', dpi = 300)
ggsave(OBISallelseorderplot,
file = './output/figures/OBISallelseorderplot.png', dpi = 300)
names(OBIS)
str(OBIS)
OBIS$Poly_ID <- as.factor(OBIS$Poly_ID)
Polydf <- OBIS %>%
group_by(., Poly_ID) %>%
summarize(., Chordates = sum(phylum == 'Chordata'),
Arthropods = sum(phylum == 'Arthropoda'),
AllElse = sum(phylum != 'Chordata' & phylum != 'Arthropoda'))
View(Polydf)
getwd()
write.csv(Polydf, "/output/Polydf.csv")
write.csv(Polydf, "./output/Polydf.csv", row.names = F)
?read.csv
Polydf <- read.csv("./output/Polydf.csv")
###Loading packages
library(tidyverse)
library(rgdal)
library(rgeos)
library(data.table)
?merge
###Spatial subset based on being within study extent
Study_Area_hex <- readOGR("./output/shapefiles", "Study_Area_hex")
temp <- sp::merge(Study_Area_hex, Polydf)
temp@data
writeOGR(OBIS_Poly, dsn = "./output/OBIS/", layer = "OBIS_Poly", driver = "ESRI Shapefile",
verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
OBIS_Poly <- sp::merge(Study_Area_hex, Polydf)
writeOGR(OBIS_Poly, dsn = "./output/OBIS/", layer = "OBIS_Poly", driver = "ESRI Shapefile",
verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
getwd()
writeOGR(OBIS_Poly, dsn = "./output/OBIS", layer = "OBIS_Poly", driver = "ESRI Shapefile",
verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
writeOGR(OBIS_Poly, dsn = "./output/shapefiles/OBIS", layer = "OBIS_Poly", driver = "ESRI Shapefile",
verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
#setwd('C:/Users/coleb/Documents/GitHub/Sam_Github')
###Loading packages
library(tidyverse)
library(rgdal)
library(rgeos)
library(data.table)
###Loading custom functions
source("./sub_code/functions/my_point_in_poly.R")
###Allocate extra memory to R
memory.limit(size = 25000)
########################
########################
# Loading in OBIS files and clipping to study extent (Chris)
filenames <- list.files(path="LargeData/OBIS/", pattern= "OBISData_", full.names=TRUE, recursive=T)
#datalist <- lapply(filenames, read.csv) # load all files into a list - slower than my loop?
OBIS <- NULL
for (i in 1:length(filenames)){temp <- read.csv(filenames[i]); OBIS <- rbind(OBIS,temp)}
rm(temp)
names(OBIS)
obisnames<- c('id', 'class', 'phylum', 'family', 'order', 'species', 'decimalLongitude', 'decimalLatitude', 'obisID', 'countryCode', 'catalogNumber')
OBIS <- OBIS[obisnames]
###Spatial subset based on being within study extent
Study_Area_hex <- readOGR("./output/shapefiles", "Study_Area_hex")
xy <- subset(OBIS, select = c(decimalLongitude, decimalLatitude))
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
#writeOGR(OBIS_observations, dsn = "./output", layer = "temp", driver = "ESRI Shapefile", verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
OBIS_observations <- my.point.in.poly(OBIS_observations, Study_Area_hex)
OBIS <- OBIS_observations@data
rm(OBIS_observations, xy, i, filenames, obisnames)
#########################
########################
# Subset the data according to the different dataframes we want. Make barplots of results
# Find all inverts except insects and arachnids, make a few data frames:
# 1. just arthropods
# 2. just chordates
# 3. everything that is not a chordate or an arthropod
# and then for each dataframe, do the histogram of the classes and orders!
#Step: filter arachnids and insects
OBIS <- OBIS %>%
filter(class != "Insecta", class != 'Arachnida')
#Step: make a few dataframes
OBISarth <- OBIS %>%
filter(phylum == 'Arthropoda')
OBISchord <- OBIS %>%
filter(phylum == 'Chordata')
OBISallelse <- OBIS %>%
filter(phylum != 'Chordata', phylum != 'Arthropoda')
OBIS$phylum[1:40]
#Step: make plots
OBISarthclassplot <- OBISarth %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthclassplot <- OBISarthclassplot + theme(axis.text.x = element_text(angle = 90)); OBISarthclassplot
OBISarthorderplot <- OBISarth %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthorderplot <- OBISarthorderplot + theme(axis.text.x = element_text(angle = 90))
ggsave(OBISarthorderplot,
file = './output/figures/OBISarthorderplot.png', dpi = 300)
OBISarthorderplot <- OBISarth %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthorderplot <- OBISarthorderplot + theme(axis.text.x = element_text(angle = 90))
ggsave(OBISarthorderplot,
file = './output/figures/OBISarthorderplot.png', dpi = 300)
OBISarthorderplot <- OBISarthorderplot + theme(axis.text.x = element_text(angle = 90)); OBISarthorderplot
OBISchordclassplot <- OBISchord %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordclassplot <- OBISchordclassplot + theme(axis.text.x = element_text(angle = 90)); OBISchordclassplot
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90)); OBISchordorderplot
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90), size = 2); OBISchordorderplot
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90, size = 2)); OBISchordorderplot
ggsave(OBISchordorderplot,
file = './output/figures/OBISchordorderplot.png', dpi = 300)
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90, size = 3)); OBISchordorderplot
ggsave(OBISchordorderplot,
file = './output/figures/OBISchordorderplot.png', dpi = 300)
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90)); OBISchordorderplot
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90)); OBISchordorderplot
ggsave(OBISchordorderplot,
file = './output/figures/OBISchordorderplot.png', dpi = 300)
#setwd('C:/Users/coleb/Documents/GitHub/Sam_Github')
###Loading packages
library(tidyverse)
library(rgdal)
library(rgeos)
library(data.table)
###Loading custom functions
source("./sub_code/functions/my_point_in_poly.R")
###Allocate extra memory to R
memory.limit(size = 25000)
########################
########################
# Loading in OBIS files and clipping to study extent (Chris)
filenames <- list.files(path="LargeData/OBIS/", pattern= "OBISData_", full.names=TRUE, recursive=T)
#datalist <- lapply(filenames, read.csv) # load all files into a list - slower than my loop?
OBIS <- NULL
for (i in 1:length(filenames)){temp <- read.csv(filenames[i]); OBIS <- rbind(OBIS,temp)}
rm(temp)
names(OBIS)
obisnames<- c('id', 'class', 'phylum', 'family', 'order', 'species', 'decimalLongitude', 'decimalLatitude', 'obisID', 'countryCode', 'catalogNumber')
OBIS <- OBIS[obisnames]
###Spatial subset based on being within study extent
Study_Area_hex <- readOGR("./output/shapefiles", "Study_Area_hex")
xy <- subset(OBIS, select = c(decimalLongitude, decimalLatitude))
OBIS_observations <- SpatialPointsDataFrame(coords = xy, data = OBIS, proj4string = CRS("+proj=longlat +datum=WGS84"))
OBIS_observations <- spTransform(OBIS_observations, Study_Area_hex@proj4string)
#writeOGR(OBIS_observations, dsn = "./output", layer = "temp", driver = "ESRI Shapefile", verbose = TRUE, overwrite = TRUE, morphToESRI = TRUE)
OBIS_observations <- my.point.in.poly(OBIS_observations, Study_Area_hex)
OBIS <- OBIS_observations@data
rm(OBIS_observations, xy, i, filenames, obisnames)
#########################
########################
# Subset the data according to the different dataframes we want. Make barplots of results
# Find all inverts except insects and arachnids, make a few data frames:
# 1. just arthropods
# 2. just chordates
# 3. everything that is not a chordate or an arthropod
# and then for each dataframe, do the histogram of the classes and orders!
#Step: filter arachnids and insects
OBIS <- OBIS %>%
filter(class != "Insecta", class != 'Arachnida')
#Step: make a few dataframes
OBISarth <- OBIS %>%
filter(phylum == 'Arthropoda')
OBISchord <- OBIS %>%
filter(phylum == 'Chordata')
OBISallelse <- OBIS %>%
filter(phylum != 'Chordata', phylum != 'Arthropoda')
OBIS$phylum[1:40]
#Step: make plots
OBISarthclassplot <- OBISarth %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthclassplot <- OBISarthclassplot + theme(axis.text.x = element_text(angle = 90)); OBISarthclassplot
?ggsave
ggsave(OBISarthclassplot,
file = './output/figures/OBISarthclassplot.png', width = 4, height = 3, dpi = 300)
ggsave(OBISarthclassplot,
file = './output/figures/OBISarthclassplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISarthorderplot <- OBISarth %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthorderplot <- OBISarthorderplot + theme(axis.text.x = element_text(angle = 90)); OBISarthorderplot
ggsave(OBISarthorderplot,
file = './output/figures/OBISarthorderplot.png', width = 16, height = 9, dpi = 300)
OBISchordclassplot <- OBISchord %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordclassplot <- OBISchordclassplot + theme(axis.text.x = element_text(angle = 90)); OBISchordclassplot
ggsave(OBISchordclassplot,
file = './output/figures/OBISchordclassplot.png', width = 16, height = 9, dpi = 300)
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90)); OBISchordorderplot
ggsave(OBISchordorderplot,
file = './output/figures/OBISchordorderplot.png', width = 16, height = 9, dpi = 300)
OBISarthclassplot <- OBISarth %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthclassplot <- OBISarthclassplot + theme(axis.text.x = element_text(angle = 90)); OBISarthclassplot
ggsave(OBISarthclassplot,
file = './output/figures/OBISarthclassplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISarthorderplot <- OBISarth %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthorderplot <- OBISarthorderplot + theme(axis.text.x = element_text(angle = 90)); OBISarthorderplot
ggsave(OBISarthorderplot,
file = './output/figures/OBISarthorderplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISchordclassplot <- OBISchord %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordclassplot <- OBISchordclassplot + theme(axis.text.x = element_text(angle = 90)); OBISchordclassplot
ggsave(OBISchordclassplot,
file = './output/figures/OBISchordclassplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90)); OBISchordorderplot
ggsave(OBISchordorderplot,
file = './output/figures/OBISchordorderplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISallelseclassplot <- OBISallelse %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISallelseclassplot <- OBISallelseclassplot + theme(axis.text.x = element_text(angle = 90))
ggsave(OBISallelseclassplot,
file = './output/figures/OBISallelseclassplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISallelseorderplot <- OBISallelse %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISallelseorderplot <- OBISallelseorderplot + theme(axis.text.x = element_text(angle = 90, size = 3))
ggsave(OBISallelseorderplot,
file = './output/figures/OBISallelseorderplot.png', width = 16, height = 9, units = "cm", dpi = 300)
32/19
32/18
16/9
#Step: make plots
OBISarthclassplot <- OBISarth %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthclassplot <- OBISarthclassplot + theme(axis.text.x = element_text(angle = 90)); OBISarthclassplot
ggsave(OBISarthclassplot,
file = './output/figures/OBISarthclassplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISarthorderplot <- OBISarth %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISarthorderplot <- OBISarthorderplot + theme(axis.text.x = element_text(angle = 90)); OBISarthorderplot
ggsave(OBISarthorderplot,
file = './output/figures/OBISarthorderplot.png', width = 32, height = 18, units = "cm", dpi = 320)
OBISchordclassplot <- OBISchord %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordclassplot <- OBISchordclassplot + theme(axis.text.x = element_text(angle = 90)); OBISchordclassplot
ggsave(OBISchordclassplot,
file = './output/figures/OBISchordclassplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISchordorderplot <- OBISchord %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISchordorderplot <- OBISchordorderplot + theme(axis.text.x = element_text(angle = 90)); OBISchordorderplot
ggsave(OBISchordorderplot,
file = './output/figures/OBISchordorderplot.png', width = 32, height = 18, units = "cm", dpi = 320)
OBISallelseclassplot <- OBISallelse %>%
group_by(class) %>%
ggplot(aes(x = class, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISallelseclassplot <- OBISallelseclassplot + theme(axis.text.x = element_text(angle = 90))
ggsave(OBISallelseclassplot,
file = './output/figures/OBISallelseclassplot.png', width = 16, height = 9, units = "cm", dpi = 300)
OBISallelseorderplot <- OBISallelse %>%
group_by(order) %>%
ggplot(aes(x = order, na.rm = TRUE)) +
geom_bar(colour = 'black', fill = 'red2') +
theme_classic()
OBISallelseorderplot <- OBISallelseorderplot + theme(axis.text.x = element_text(angle = 90, size = 3))
ggsave(OBISallelseorderplot,
file = './output/figures/OBISallelseorderplot.png', width = 32, height = 18, units = "cm", dpi = 320)
